box: combient/java-mvn  
test:
  steps:
    # Run tests on medrec REST API
    - script:
        name: Maven test
        code: mvn test
build:
  steps:
    - script: 
         name: Maven install
         code: mvn install

push:
  steps:
    # Push to public docker repo Container Registry (CR)
    - internal/docker-push:
        username: $OCIR_USERNAME
        password: $OCIR_PASSWORD
        repository: $OCIR_REPOSITORY
        tag: v1
        registry: $OCIR_REGISTRY
        cmd: java -jar  /pipeline/source/target/medrec-0.0.1-SNAPSHOT.jar

deploy:
    box: node:10.9.0
    steps:

    # `apply` is a good command to use here, as it'll create Kubernetes entities if they are missing.
    - kubectl:
        name: deploy to oke
        server: $OKE_URL
        token: $OKE_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f $WERCKER_ROOT/kubernetes_deployment.yml --namespace=default

    # Watch the Kubernetes deployment. Once the pods are considered healthy the step will exit 0
    # If they aren't healthy within 60 seconds, it will exit with a non 0 exit code, and cause the run to fail.
    - kubectl:
        name: check deployment status
        server: $OKE_URL
        token: $OKE_TOKEN
        insecure-skip-tls-verify: true
        command: rollout status deployment/medrecapi